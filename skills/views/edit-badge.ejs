<!-- Header -->
<%- include('partials/header') %>
<!-- Header -->

<div class="container mt-4" style="max-width: 600px;">
  <h1>Editar medalla</h1>

  <form id="editarMedallaForm" action="/leaderboard/<%= badge.rango %>" method="POST" onsubmit="return validarFormulario(event)">
    <div class="mb-3">
      <label for="text" class="form-label">Nombre de la medalla</label>
      <input type="text" class="form-control" id="nombre" name="nombre" value="<%= badge.rango %>" required>
    </div>

    <div class="mb-3">
      <label for="text" class="form-label">Rango</label>
      <input type="text" class="form-control" id="rango" name="rango" value="<%= badge.rango %>" required>
    </div>

    <div class="mb-3">
      <label for="bitpoints_min" class="form-label">Bitpoints Mínimos</label>
      <input type="number" id="bitpointsMin" name="bitpoints_min" class="form-control" value="<%= badge.bitpoints_min %>" required>
    </div>

    <div class="mb-3">
      <label for="bitpoints_max" class="form-label">Bitpoints Máximos</label>
      <input type="number" id="bitpointsMax" name="bitpoints_max" class="form-control" value="<%= badge.bitpoints_max %>" required>
    </div>

    <div class="mb-3 row align-items-center">
      <div class="col-md-8">
        <label for="icon" class="form-label">Enlace de la Imagen</label>
        <input type="url" id="enlaceImagen" name="png" class="form-control" value="<%= badge.png %>" required>
      </div>
    </div>

    <div class="text-center">
      <a class="btn btn-danger" href="/badges">Cancelar</a>
      <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    </div>
  </form>
</div>

<!-- Mensaje de éxito (inicialmente oculto) -->
<div id="successMessage" class="alert alert-success mt-4" style="display: none;">
  <h3>Medalla guardada correctamente</h3>
  <button class="btn btn-success" onclick="cerrarMensaje()">Aceptar</button>
</div>

<!-- Footer -->
<%- include('partials/footer') %>
<!-- Footer -->

<!-- mensaje de éxito centro -->
<style>
  #successMessage {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 9999; 
    width: 80%; 
    max-width: 600px; 
    text-align: center;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
  }

  #successMessage button {
    margin-top: 20px;
  }
</style>

<script>
  function validarFormulario(event) {
    const bitpointsMin = parseInt(document.getElementById('bitpointsMin').value, 10);
    const bitpointsMax = parseInt(document.getElementById('bitpointsMax').value, 10);
    const enlaceImagen = document.getElementById('enlaceImagen').value.trim();

    // Validación de los puntos
    if (bitpointsMin < 0 || bitpointsMax < 0) {
      alert('Los Bitpoints deben ser números positivos.');
      event.preventDefault();
      return false;
    }

    // Validar que los puntos máximos no sean menores que los mínimos
    if (bitpointsMax < bitpointsMin) {
      alert('Bitpoints máximos no pueden ser menores que los mínimos.');
      event.preventDefault();
      return false;
    }

    // Detener el formulario de enviar de manera tradicional
    event.preventDefault();

    
    const formData = new FormData(event.target);
    fetch(event.target.action, {
      method: 'POST',
      body: formData,
    })
      .then(response => response.text())
      .then(data => {
        // Mostrar mensaje de éxito
        document.getElementById('successMessage').style.display = 'block';

        document.getElementById('nombre').value = document.getElementById('rango').value; // ejemplo de actualización
        document.getElementById('bitpointsMin').value = bitpointsMin;
        document.getElementById('bitpointsMax').value = bitpointsMax;
        document.getElementById('enlaceImagen').value = enlaceImagen;
      })
      .catch(error => {
        alert('Hubo un error al guardar los cambios. Por favor, intente de nuevo.');
        console.error(error);
      });
  }

  async function handleSubmit(event) {
  event.preventDefault(); // Previene el envío tradicional del formulario

  // Recoger los datos del formulario
  const bitpointsMin = parseInt(document.getElementById('bitpointsMin').value, 10);
  const bitpointsMax = parseInt(document.getElementById('bitpointsMax').value, 10);
  const enlaceImagen = document.getElementById('enlaceImagen').value.trim();

  validarFormulario(event);

  const formData = new FormData(event.target); // Recoger los datos del formulario

  try {
    // Hacer la petición para guardar los cambios
    const response = await fetch(event.target.action, {
      method: 'POST',
      body: formData,
    });

    if (response.ok) {
      // Si la respuesta es exitosa, obtener los datos actualizados
      const updatedBadge = await response.json(); // Los datos actualizados deben ser enviados por el servidor

      // Llamar a la función para actualizar la tabla
      actualizarTabla(updatedBadge);

      // Mostrar el mensaje de éxito
      document.getElementById('successMessage').style.display = 'block';
    } else {
      const error = await response.json();
      alert(`Error: ${error.message || 'No se pudo guardar los cambios'}`);
    }
  } catch (error) {
    alert('Error en la conexión');
    console.error(error);
  }
}

function actualizarTabla(badge) {
  // Encuentra la fila de la medalla en la tabla usando el rango de la medalla
  const row = document.querySelector(`[data-badge-id="${badge.rango}"]`).closest('tr');

  // Actualiza las celdas de la tabla con los nuevos valores
  row.querySelector('td:nth-child(2)').textContent = badge.rango;
  row.querySelector('td:nth-child(4)').textContent = badge.bitpoints_min;
  row.querySelector('td:nth-child(5)').textContent = badge.bitpoints_max;

  // Si la imagen se modificó, actualiza también
  row.querySelector('td img').setAttribute('src', `/badges/${badge.png.split('/').pop()}`);
}

function cerrarMensaje() {
  // Cerrar el mensaje de éxito
  document.getElementById('successMessage').style.display = 'none';
  window.location.href = '/badges'; // Redirige a la página de medallas con los datos actualizados
}

 
</script>
